module boolean16 (
    input alufn[6],
    input x[16],
    input y[16],
    output result[16]
  ) {

  always {
    case(alufn[3:0]){
      b1000: // and
        result = x & y;
      b1110: // or
        result = x | y;
      b0110: // xor
        result = x ^ y;
      b1010: //a
        result = x;
      b0101: //b
        result = y;
      b0000: //0
        result = 16b0;
      b1111: //1
        result= 16b1111111111111111;
      b0111: //nand
        result = ~(x&y);
      b1001: //xnor
        result = x ~^ y;
      b0001: //nor
        result = ~(x|y);
      default:
        result = 16b0;
      }
  }
}
